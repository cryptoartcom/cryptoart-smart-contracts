{"abi":[{"type":"function","name":"hasPinnedTokenURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"pinned","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"pinTokenURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"tokenURIs","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"index","type":"uint256","internalType":"uint256"},{"name":"uris","type":"string[]","internalType":"string[]"},{"name":"pinned","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"unpinTokenURI","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"TokenUriPinned","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"index","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TokenUriUnpinned","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"hasPinnedTokenURI(uint256)":"455086e1","pinTokenURI(uint256,uint256)":"7de19c5f","tokenURIs(uint256)":"6c8b703f","unpinTokenURI(uint256)":"52dbd6da"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"TokenUriPinned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TokenUriUnpinned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"hasPinnedTokenURI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"pinned\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"pinTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURIs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"uris\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"pinned\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unpinTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The ERC-165 identifier for this interface is 0x06e1bc5b.\",\"events\":{\"TokenUriPinned(uint256,uint256)\":{\"details\":\"This event emits when a token uri is pinned and is  useful for indexing purposes.\"},\"TokenUriUnpinned(uint256)\":{\"details\":\"This event emits when a token uri is unpinned and is  useful for indexing purposes.\"}},\"kind\":\"dev\",\"methods\":{\"hasPinnedTokenURI(uint256)\":{\"details\":\"This call MUST revert if the token does not existUseful for on-chain mechanics that don't require the tokenURIs themselves\",\"params\":{\"tokenId\":\"The identifier of the nft\"},\"returns\":{\"pinned\":\"A bool specifying if a token has metadata pinned or not\"}},\"pinTokenURI(uint256,uint256)\":{\"details\":\"This call MUST revert if the token does not existThis call MUST emit a `TokenUriPinned` eventThis call MAY emit a `MetadataUpdate` event from ERC-4096\",\"params\":{\"index\":\"The index in the string array returned from the `tokenURIs` function that should be pinned for the token\",\"tokenId\":\"The identifier of the nft\"}},\"tokenURIs(uint256)\":{\"details\":\"If a token uri is pinned, the index returned SHOULD be the index in the string arrayThis call MUST revert if the token does not exist\",\"params\":{\"tokenId\":\"The identifier for the nft\"},\"returns\":{\"index\":\"An unisgned integer that specifies which uri is pinned for a token (or the default uri if unpinned)\",\"pinned\":\"A boolean showing if the token has pinned metadata or not\",\"uris\":\"A string array of all uris associated with a token\"}},\"unpinTokenURI(uint256)\":{\"details\":\"This call MUST revert if the token does not existThis call MUST emit a `TokenUriUnpinned` eventThis call MAY emit a `MetadataUpdate` event from ERC-4096It is up to the developer to define what this function does and is intentionally left open-ended\",\"params\":{\"tokenId\":\"The identifier of the nft\"}}},\"title\":\"EIP-721 Multi-Metdata Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hasPinnedTokenURI(uint256)\":{\"notice\":\"Check on-chain if a token id has a pinned uri or not\"},\"pinTokenURI(uint256,uint256)\":{\"notice\":\"Pin a specific token uri for a particular token\"},\"tokenURIs(uint256)\":{\"notice\":\"Get all token uris associated with a particular token\"},\"unpinTokenURI(uint256)\":{\"notice\":\"Unpin metadata for a particular token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC7160.sol\":\"IERC7160\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/IERC7160.sol\":{\"keccak256\":\"0x3b080fe8ffd32834bf98342b28212cd19bc19581f58ab4ef03ca5953cabefd6a\",\"urls\":[\"bzz-raw://b997128db959a42445af2bb22c0eef516cd4d0b6678922c392a4cd452512bb50\",\"dweb:/ipfs/QmT4vLh7KJDpT3iGX5dxMQXMhMdLmEdNzqzfEP6PeAiCAq\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"index","type":"uint256","indexed":true}],"type":"event","name":"TokenUriPinned","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"TokenUriUnpinned","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"hasPinnedTokenURI","outputs":[{"internalType":"bool","name":"pinned","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"pinTokenURI"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokenURIs","outputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"string[]","name":"uris","type":"string[]"},{"internalType":"bool","name":"pinned","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unpinTokenURI"}],"devdoc":{"kind":"dev","methods":{"hasPinnedTokenURI(uint256)":{"details":"This call MUST revert if the token does not existUseful for on-chain mechanics that don't require the tokenURIs themselves","params":{"tokenId":"The identifier of the nft"},"returns":{"pinned":"A bool specifying if a token has metadata pinned or not"}},"pinTokenURI(uint256,uint256)":{"details":"This call MUST revert if the token does not existThis call MUST emit a `TokenUriPinned` eventThis call MAY emit a `MetadataUpdate` event from ERC-4096","params":{"index":"The index in the string array returned from the `tokenURIs` function that should be pinned for the token","tokenId":"The identifier of the nft"}},"tokenURIs(uint256)":{"details":"If a token uri is pinned, the index returned SHOULD be the index in the string arrayThis call MUST revert if the token does not exist","params":{"tokenId":"The identifier for the nft"},"returns":{"index":"An unisgned integer that specifies which uri is pinned for a token (or the default uri if unpinned)","pinned":"A boolean showing if the token has pinned metadata or not","uris":"A string array of all uris associated with a token"}},"unpinTokenURI(uint256)":{"details":"This call MUST revert if the token does not existThis call MUST emit a `TokenUriUnpinned` eventThis call MAY emit a `MetadataUpdate` event from ERC-4096It is up to the developer to define what this function does and is intentionally left open-ended","params":{"tokenId":"The identifier of the nft"}}},"version":1},"userdoc":{"kind":"user","methods":{"hasPinnedTokenURI(uint256)":{"notice":"Check on-chain if a token id has a pinned uri or not"},"pinTokenURI(uint256,uint256)":{"notice":"Pin a specific token uri for a particular token"},"tokenURIs(uint256)":{"notice":"Get all token uris associated with a particular token"},"unpinTokenURI(uint256)":{"notice":"Unpin metadata for a particular token"}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","eth-gas-reporter/=node_modules/eth-gas-reporter/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/IERC7160.sol":"IERC7160"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/IERC7160.sol":{"keccak256":"0x3b080fe8ffd32834bf98342b28212cd19bc19581f58ab4ef03ca5953cabefd6a","urls":["bzz-raw://b997128db959a42445af2bb22c0eef516cd4d0b6678922c392a4cd452512bb50","dweb:/ipfs/QmT4vLh7KJDpT3iGX5dxMQXMhMdLmEdNzqzfEP6PeAiCAq"],"license":null}},"version":1},"id":1}